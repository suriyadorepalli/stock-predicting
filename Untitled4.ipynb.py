{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12807,"status":"ok","timestamp":1729863148885,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"5uukfGdZ5DQ5","outputId":"2bb8e1de-518f-40ca-c871-6e6fd8525a59"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: yfinance in /usr/local/lib/python3.10/dist-packages (0.2.46)\n","Requirement already satisfied: pandas>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from yfinance) (2.2.2)\n","Requirement already satisfied: numpy>=1.16.5 in /usr/local/lib/python3.10/dist-packages (from yfinance) (1.26.4)\n","Requirement already satisfied: requests>=2.31 in /usr/local/lib/python3.10/dist-packages (from yfinance) (2.32.3)\n","Requirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.10/dist-packages (from yfinance) (0.0.11)\n","Requirement already satisfied: lxml>=4.9.1 in /usr/local/lib/python3.10/dist-packages (from yfinance) (4.9.4)\n","Requirement already satisfied: platformdirs>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from yfinance) (4.3.6)\n","Requirement already satisfied: pytz>=2022.5 in /usr/local/lib/python3.10/dist-packages (from yfinance) (2024.2)\n","Requirement already satisfied: frozendict>=2.3.4 in /usr/local/lib/python3.10/dist-packages (from yfinance) (2.4.6)\n","Requirement already satisfied: peewee>=3.16.2 in /usr/local/lib/python3.10/dist-packages (from yfinance) (3.17.7)\n","Requirement already satisfied: beautifulsoup4>=4.11.1 in /usr/local/lib/python3.10/dist-packages (from yfinance) (4.12.3)\n","Requirement already satisfied: html5lib>=1.1 in /usr/local/lib/python3.10/dist-packages (from yfinance) (1.1)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4>=4.11.1->yfinance) (2.6)\n","Requirement already satisfied: six>=1.9 in /usr/local/lib/python3.10/dist-packages (from html5lib>=1.1->yfinance) (1.16.0)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from html5lib>=1.1->yfinance) (0.5.1)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.3.0->yfinance) (2.8.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.3.0->yfinance) (2024.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (2.2.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.31->yfinance) (2024.8.30)\n"]}],"source":["  !pip install yfinance"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2523,"status":"ok","timestamp":1729863179292,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"vCG8MFLB5Knb","outputId":"4747e2e6-b6a5-477c-c5e3-e083f843eb61"},"outputs":[{"output_type":"stream","name":"stdout","text":["yfinance is successfully installed\n"]}],"source":["import yfinance as yf\n","print(\"yfinance is successfully installed\")"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"af0rQVL25RR5","executionInfo":{"status":"ok","timestamp":1729863190403,"user_tz":-330,"elapsed":745,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import yfinance as yf"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"executionInfo":{"elapsed":534,"status":"ok","timestamp":1729863194079,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"EPAN2-cO5VmZ","outputId":"647adad5-7da6-4e3b-ae2e-d0aef51c44fe"},"outputs":[{"output_type":"stream","name":"stderr","text":["\r[*********************100%***********************]  1 of 1 completed\n"]},{"output_type":"execute_result","data":{"text/plain":["Price                     Adj Close     Close      High       Low      Open  \\\n","Ticker                         AAPL      AAPL      AAPL      AAPL      AAPL   \n","Date                                                                          \n","2010-01-04 00:00:00+00:00  6.454505  7.643214  7.660714  7.585000  7.622500   \n","2010-01-05 00:00:00+00:00  6.465665  7.656429  7.699643  7.616071  7.664286   \n","2010-01-06 00:00:00+00:00  6.362819  7.534643  7.686786  7.526786  7.656429   \n","2010-01-07 00:00:00+00:00  6.351057  7.520714  7.571429  7.466071  7.562500   \n","2010-01-08 00:00:00+00:00  6.393281  7.570714  7.571429  7.466429  7.510714   \n","\n","Price                         Volume  \n","Ticker                          AAPL  \n","Date                                  \n","2010-01-04 00:00:00+00:00  493729600  \n","2010-01-05 00:00:00+00:00  601904800  \n","2010-01-06 00:00:00+00:00  552160000  \n","2010-01-07 00:00:00+00:00  477131200  \n","2010-01-08 00:00:00+00:00  447610800  "],"text/html":["\n","  <div id=\"df-4cb6eb28-b7db-4050-9bb0-f0eab38b953f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th>Price</th>\n","      <th>Adj Close</th>\n","      <th>Close</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Open</th>\n","      <th>Volume</th>\n","    </tr>\n","    <tr>\n","      <th>Ticker</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2010-01-04 00:00:00+00:00</th>\n","      <td>6.454505</td>\n","      <td>7.643214</td>\n","      <td>7.660714</td>\n","      <td>7.585000</td>\n","      <td>7.622500</td>\n","      <td>493729600</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-05 00:00:00+00:00</th>\n","      <td>6.465665</td>\n","      <td>7.656429</td>\n","      <td>7.699643</td>\n","      <td>7.616071</td>\n","      <td>7.664286</td>\n","      <td>601904800</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-06 00:00:00+00:00</th>\n","      <td>6.362819</td>\n","      <td>7.534643</td>\n","      <td>7.686786</td>\n","      <td>7.526786</td>\n","      <td>7.656429</td>\n","      <td>552160000</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-07 00:00:00+00:00</th>\n","      <td>6.351057</td>\n","      <td>7.520714</td>\n","      <td>7.571429</td>\n","      <td>7.466071</td>\n","      <td>7.562500</td>\n","      <td>477131200</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-08 00:00:00+00:00</th>\n","      <td>6.393281</td>\n","      <td>7.570714</td>\n","      <td>7.571429</td>\n","      <td>7.466429</td>\n","      <td>7.510714</td>\n","      <td>447610800</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4cb6eb28-b7db-4050-9bb0-f0eab38b953f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4cb6eb28-b7db-4050-9bb0-f0eab38b953f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4cb6eb28-b7db-4050-9bb0-f0eab38b953f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f61e679b-537c-4d54-b541-c55fa1a5520b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f61e679b-537c-4d54-b541-c55fa1a5520b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f61e679b-537c-4d54-b541-c55fa1a5520b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 2515,\n  \"fields\": [\n    {\n      \"column\": [\n        \"Date\",\n        \"\"\n      ],\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-04 00:00:00+00:00\",\n        \"max\": \"2019-12-30 00:00:00+00:00\",\n        \"num_unique_values\": 2515,\n        \"samples\": [\n          \"2012-06-14 00:00:00+00:00\",\n          \"2013-09-10 00:00:00+00:00\",\n          \"2013-10-01 00:00:00+00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Adj Close\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.952918278813746,\n        \"min\": 5.7921953201293945,\n        \"max\": 70.73358917236328,\n        \"num_unique_values\": 2478,\n        \"samples\": [\n          28.126813888549805,\n          10.387645721435547,\n          44.6705207824707\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Close\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.016253049378737,\n        \"min\": 6.85892915725708,\n        \"max\": 72.87999725341797,\n        \"num_unique_values\": 2407,\n        \"samples\": [\n          39.439998626708984,\n          27.2549991607666,\n          28.809999465942383\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"High\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.118350948209311,\n        \"min\": 7.0,\n        \"max\": 73.49250030517578,\n        \"num_unique_values\": 2385,\n        \"samples\": [\n          28.584999084472656,\n          27.587499618530273,\n          24.392499923706055\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Low\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.894064577193769,\n        \"min\": 6.794642925262451,\n        \"max\": 72.02999877929688,\n        \"num_unique_values\": 2399,\n        \"samples\": [\n          45.85499954223633,\n          41.220001220703125,\n          14.216071128845215\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Open\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.996450669070406,\n        \"min\": 6.870357036590576,\n        \"max\": 72.77999877929688,\n        \"num_unique_values\": 2405,\n        \"samples\": [\n          39.102500915527344,\n          28.02750015258789,\n          28.520000457763672\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Volume\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 235293332,\n        \"min\": 45448000,\n        \"max\": 1880998000,\n        \"num_unique_values\": 2509,\n        \"samples\": [\n          211805600,\n          284174800,\n          117930400\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}],"source":["start = '2010-01-01'\n","end = '2019-12-31'\n","\n","df = yf.download('AAPL',start,end)\n","df.head()"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"elapsed":500,"status":"ok","timestamp":1729863200369,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"PhHoRnZw5axb","outputId":"306cee1a-05ef-4dfc-b26d-9870a4f7471a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Price                      Adj Close      Close       High        Low  \\\n","Ticker                          AAPL       AAPL       AAPL       AAPL   \n","Date                                                                    \n","2019-12-23 00:00:00+00:00  68.908989  71.000000  71.062500  70.092499   \n","2019-12-24 00:00:00+00:00  68.974503  71.067497  71.222504  70.730003   \n","2019-12-26 00:00:00+00:00  70.342987  72.477501  72.495003  71.175003   \n","2019-12-27 00:00:00+00:00  70.316284  72.449997  73.492500  72.029999   \n","2019-12-30 00:00:00+00:00  70.733589  72.879997  73.172501  71.305000   \n","\n","Price                           Open     Volume  \n","Ticker                          AAPL       AAPL  \n","Date                                             \n","2019-12-23 00:00:00+00:00  70.132500   98572000  \n","2019-12-24 00:00:00+00:00  71.172501   48478800  \n","2019-12-26 00:00:00+00:00  71.205002   93121200  \n","2019-12-27 00:00:00+00:00  72.779999  146266000  \n","2019-12-30 00:00:00+00:00  72.364998  144114400  "],"text/html":["\n","  <div id=\"df-c3e9db5b-10be-4b23-9328-b7dde8d99023\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th>Price</th>\n","      <th>Adj Close</th>\n","      <th>Close</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Open</th>\n","      <th>Volume</th>\n","    </tr>\n","    <tr>\n","      <th>Ticker</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2019-12-23 00:00:00+00:00</th>\n","      <td>68.908989</td>\n","      <td>71.000000</td>\n","      <td>71.062500</td>\n","      <td>70.092499</td>\n","      <td>70.132500</td>\n","      <td>98572000</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-24 00:00:00+00:00</th>\n","      <td>68.974503</td>\n","      <td>71.067497</td>\n","      <td>71.222504</td>\n","      <td>70.730003</td>\n","      <td>71.172501</td>\n","      <td>48478800</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-26 00:00:00+00:00</th>\n","      <td>70.342987</td>\n","      <td>72.477501</td>\n","      <td>72.495003</td>\n","      <td>71.175003</td>\n","      <td>71.205002</td>\n","      <td>93121200</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-27 00:00:00+00:00</th>\n","      <td>70.316284</td>\n","      <td>72.449997</td>\n","      <td>73.492500</td>\n","      <td>72.029999</td>\n","      <td>72.779999</td>\n","      <td>146266000</td>\n","    </tr>\n","    <tr>\n","      <th>2019-12-30 00:00:00+00:00</th>\n","      <td>70.733589</td>\n","      <td>72.879997</td>\n","      <td>73.172501</td>\n","      <td>71.305000</td>\n","      <td>72.364998</td>\n","      <td>144114400</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3e9db5b-10be-4b23-9328-b7dde8d99023')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c3e9db5b-10be-4b23-9328-b7dde8d99023 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c3e9db5b-10be-4b23-9328-b7dde8d99023');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-91d6a713-2bde-41d5-b634-c9c601859540\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-91d6a713-2bde-41d5-b634-c9c601859540')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-91d6a713-2bde-41d5-b634-c9c601859540 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": [\n        \"Date\",\n        \"\"\n      ],\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2019-12-23 00:00:00+00:00\",\n        \"max\": \"2019-12-30 00:00:00+00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2019-12-24 00:00:00+00:00\",\n          \"2019-12-30 00:00:00+00:00\",\n          \"2019-12-26 00:00:00+00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Adj Close\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8504477749104606,\n        \"min\": 68.90898895263672,\n        \"max\": 70.73358917236328,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          68.97450256347656,\n          70.73358917236328,\n          70.34298706054688\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Close\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8762613101526231,\n        \"min\": 71.0,\n        \"max\": 72.87999725341797,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          71.06749725341797,\n          72.87999725341797,\n          72.47750091552734\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"High\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1082802142703474,\n        \"min\": 71.0625,\n        \"max\": 73.49250030517578,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          71.22250366210938,\n          73.17250061035156,\n          72.49500274658203\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Low\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7174422579968989,\n        \"min\": 70.09249877929688,\n        \"max\": 72.02999877929688,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          70.7300033569336,\n          71.30500030517578,\n          71.17500305175781\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Open\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0542948009887556,\n        \"min\": 70.13249969482422,\n        \"max\": 72.77999877929688,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          71.17250061035156,\n          72.36499786376953,\n          71.20500183105469\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Volume\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40631651,\n        \"min\": 48478800,\n        \"max\": 146266000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          48478800,\n          144114400,\n          93121200\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}],"source":["df.tail()"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1729863205030,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"owQurCzm5l9Q","outputId":"ef6f7ffc-a341-49a1-d809-df6cc7928830"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Price                       Date Adj Close     Close      High       Low  \\\n","Ticker                                AAPL      AAPL      AAPL      AAPL   \n","0      2010-01-04 00:00:00+00:00  6.454505  7.643214  7.660714  7.585000   \n","1      2010-01-05 00:00:00+00:00  6.465665  7.656429  7.699643  7.616071   \n","2      2010-01-06 00:00:00+00:00  6.362819  7.534643  7.686786  7.526786   \n","3      2010-01-07 00:00:00+00:00  6.351057  7.520714  7.571429  7.466071   \n","4      2010-01-08 00:00:00+00:00  6.393281  7.570714  7.571429  7.466429   \n","\n","Price       Open     Volume  \n","Ticker      AAPL       AAPL  \n","0       7.622500  493729600  \n","1       7.664286  601904800  \n","2       7.656429  552160000  \n","3       7.562500  477131200  \n","4       7.510714  447610800  "],"text/html":["\n","  <div id=\"df-28457a59-1a01-4d49-816a-b43bc90c46f1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th>Price</th>\n","      <th>Date</th>\n","      <th>Adj Close</th>\n","      <th>Close</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Open</th>\n","      <th>Volume</th>\n","    </tr>\n","    <tr>\n","      <th>Ticker</th>\n","      <th></th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-01-04 00:00:00+00:00</td>\n","      <td>6.454505</td>\n","      <td>7.643214</td>\n","      <td>7.660714</td>\n","      <td>7.585000</td>\n","      <td>7.622500</td>\n","      <td>493729600</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010-01-05 00:00:00+00:00</td>\n","      <td>6.465665</td>\n","      <td>7.656429</td>\n","      <td>7.699643</td>\n","      <td>7.616071</td>\n","      <td>7.664286</td>\n","      <td>601904800</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010-01-06 00:00:00+00:00</td>\n","      <td>6.362819</td>\n","      <td>7.534643</td>\n","      <td>7.686786</td>\n","      <td>7.526786</td>\n","      <td>7.656429</td>\n","      <td>552160000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010-01-07 00:00:00+00:00</td>\n","      <td>6.351057</td>\n","      <td>7.520714</td>\n","      <td>7.571429</td>\n","      <td>7.466071</td>\n","      <td>7.562500</td>\n","      <td>477131200</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010-01-08 00:00:00+00:00</td>\n","      <td>6.393281</td>\n","      <td>7.570714</td>\n","      <td>7.571429</td>\n","      <td>7.466429</td>\n","      <td>7.510714</td>\n","      <td>447610800</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28457a59-1a01-4d49-816a-b43bc90c46f1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-28457a59-1a01-4d49-816a-b43bc90c46f1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-28457a59-1a01-4d49-816a-b43bc90c46f1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e411f86f-cdae-4145-a49d-526a1a21857a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e411f86f-cdae-4145-a49d-526a1a21857a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e411f86f-cdae-4145-a49d-526a1a21857a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 2515,\n  \"fields\": [\n    {\n      \"column\": [\n        \"Date\",\n        \"\"\n      ],\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-04 00:00:00+00:00\",\n        \"max\": \"2019-12-30 00:00:00+00:00\",\n        \"num_unique_values\": 2515,\n        \"samples\": [\n          \"2012-06-14 00:00:00+00:00\",\n          \"2013-09-10 00:00:00+00:00\",\n          \"2013-10-01 00:00:00+00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Adj Close\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.952918278813746,\n        \"min\": 5.7921953201293945,\n        \"max\": 70.73358917236328,\n        \"num_unique_values\": 2478,\n        \"samples\": [\n          28.126813888549805,\n          10.387645721435547,\n          44.6705207824707\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Close\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.016253049378737,\n        \"min\": 6.85892915725708,\n        \"max\": 72.87999725341797,\n        \"num_unique_values\": 2407,\n        \"samples\": [\n          39.439998626708984,\n          27.2549991607666,\n          28.809999465942383\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"High\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.118350948209311,\n        \"min\": 7.0,\n        \"max\": 73.49250030517578,\n        \"num_unique_values\": 2385,\n        \"samples\": [\n          28.584999084472656,\n          27.587499618530273,\n          24.392499923706055\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Low\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.894064577193769,\n        \"min\": 6.794642925262451,\n        \"max\": 72.02999877929688,\n        \"num_unique_values\": 2399,\n        \"samples\": [\n          45.85499954223633,\n          41.220001220703125,\n          14.216071128845215\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Open\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.996450669070406,\n        \"min\": 6.870357036590576,\n        \"max\": 72.77999877929688,\n        \"num_unique_values\": 2405,\n        \"samples\": [\n          39.102500915527344,\n          28.02750015258789,\n          28.520000457763672\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Volume\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 235293332,\n        \"min\": 45448000,\n        \"max\": 1880998000,\n        \"num_unique_values\": 2509,\n        \"samples\": [\n          211805600,\n          284174800,\n          117930400\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}],"source":["df = df.reset_index()\n","df.head()\n"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":292},"executionInfo":{"elapsed":788,"status":"ok","timestamp":1729863210165,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"86nbdyoF6CYS","outputId":"2fdc2ff3-7e2a-4ef6-920c-81450d9930e9"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-7-8c5a1f85f5ca>:1: PerformanceWarning: dropping on a non-lexsorted multi-index without a level parameter may impact performance.\n","  df = df.drop(['Date','Adj Close'],axis=1)\n"]},{"output_type":"execute_result","data":{"text/plain":["Price      Close      High       Low      Open     Volume\n","Ticker      AAPL      AAPL      AAPL      AAPL       AAPL\n","0       7.643214  7.660714  7.585000  7.622500  493729600\n","1       7.656429  7.699643  7.616071  7.664286  601904800\n","2       7.534643  7.686786  7.526786  7.656429  552160000\n","3       7.520714  7.571429  7.466071  7.562500  477131200\n","4       7.570714  7.571429  7.466429  7.510714  447610800"],"text/html":["\n","  <div id=\"df-b76080ac-847c-4e93-92de-0974a5b2679b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th>Price</th>\n","      <th>Close</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Open</th>\n","      <th>Volume</th>\n","    </tr>\n","    <tr>\n","      <th>Ticker</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>7.643214</td>\n","      <td>7.660714</td>\n","      <td>7.585000</td>\n","      <td>7.622500</td>\n","      <td>493729600</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7.656429</td>\n","      <td>7.699643</td>\n","      <td>7.616071</td>\n","      <td>7.664286</td>\n","      <td>601904800</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.534643</td>\n","      <td>7.686786</td>\n","      <td>7.526786</td>\n","      <td>7.656429</td>\n","      <td>552160000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7.520714</td>\n","      <td>7.571429</td>\n","      <td>7.466071</td>\n","      <td>7.562500</td>\n","      <td>477131200</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7.570714</td>\n","      <td>7.571429</td>\n","      <td>7.466429</td>\n","      <td>7.510714</td>\n","      <td>447610800</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b76080ac-847c-4e93-92de-0974a5b2679b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b76080ac-847c-4e93-92de-0974a5b2679b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b76080ac-847c-4e93-92de-0974a5b2679b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1c8d5a19-f9d5-4c18-bd99-18f45ffa6953\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1c8d5a19-f9d5-4c18-bd99-18f45ffa6953')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1c8d5a19-f9d5-4c18-bd99-18f45ffa6953 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 2515,\n  \"fields\": [\n    {\n      \"column\": [\n        \"Close\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.016253049378737,\n        \"min\": 6.85892915725708,\n        \"max\": 72.87999725341797,\n        \"num_unique_values\": 2407,\n        \"samples\": [\n          39.439998626708984,\n          27.2549991607666,\n          28.809999465942383\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"High\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.118350948209311,\n        \"min\": 7.0,\n        \"max\": 73.49250030517578,\n        \"num_unique_values\": 2385,\n        \"samples\": [\n          28.584999084472656,\n          27.587499618530273,\n          24.392499923706055\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Low\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.894064577193769,\n        \"min\": 6.794642925262451,\n        \"max\": 72.02999877929688,\n        \"num_unique_values\": 2399,\n        \"samples\": [\n          45.85499954223633,\n          41.220001220703125,\n          14.216071128845215\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Open\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.996450669070406,\n        \"min\": 6.870357036590576,\n        \"max\": 72.77999877929688,\n        \"num_unique_values\": 2405,\n        \"samples\": [\n          39.102500915527344,\n          28.02750015258789,\n          28.520000457763672\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Volume\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 235293332,\n        \"min\": 45448000,\n        \"max\": 1880998000,\n        \"num_unique_values\": 2509,\n        \"samples\": [\n          211805600,\n          284174800,\n          117930400\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}],"source":["df = df.drop(['Date','Adj Close'],axis=1)\n","df.head()"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"executionInfo":{"elapsed":773,"status":"ok","timestamp":1729863215052,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"5uWlaDpy6WnG","outputId":"a61ae5db-3f55-44c4-d2f5-ebb7fd31f1f6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7efec07a4a60>]"]},"metadata":{},"execution_count":8},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["plt.plot(df['Close'])"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"elapsed":864,"status":"ok","timestamp":1729863220596,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"wfHETwlJ6yJH","outputId":"99b734b0-1a0e-4d20-e724-ac4bef99283f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Price       Close       High        Low       Open     Volume\n","Ticker       AAPL       AAPL       AAPL       AAPL       AAPL\n","0        7.643214   7.660714   7.585000   7.622500  493729600\n","1        7.656429   7.699643   7.616071   7.664286  601904800\n","2        7.534643   7.686786   7.526786   7.656429  552160000\n","3        7.520714   7.571429   7.466071   7.562500  477131200\n","4        7.570714   7.571429   7.466429   7.510714  447610800\n","...           ...        ...        ...        ...        ...\n","2510    71.000000  71.062500  70.092499  70.132500   98572000\n","2511    71.067497  71.222504  70.730003  71.172501   48478800\n","2512    72.477501  72.495003  71.175003  71.205002   93121200\n","2513    72.449997  73.492500  72.029999  72.779999  146266000\n","2514    72.879997  73.172501  71.305000  72.364998  144114400\n","\n","[2515 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-cea8a908-85fe-4ec2-aee0-e954803b88ba\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th>Price</th>\n","      <th>Close</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Open</th>\n","      <th>Volume</th>\n","    </tr>\n","    <tr>\n","      <th>Ticker</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","      <th>AAPL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>7.643214</td>\n","      <td>7.660714</td>\n","      <td>7.585000</td>\n","      <td>7.622500</td>\n","      <td>493729600</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7.656429</td>\n","      <td>7.699643</td>\n","      <td>7.616071</td>\n","      <td>7.664286</td>\n","      <td>601904800</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.534643</td>\n","      <td>7.686786</td>\n","      <td>7.526786</td>\n","      <td>7.656429</td>\n","      <td>552160000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7.520714</td>\n","      <td>7.571429</td>\n","      <td>7.466071</td>\n","      <td>7.562500</td>\n","      <td>477131200</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7.570714</td>\n","      <td>7.571429</td>\n","      <td>7.466429</td>\n","      <td>7.510714</td>\n","      <td>447610800</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2510</th>\n","      <td>71.000000</td>\n","      <td>71.062500</td>\n","      <td>70.092499</td>\n","      <td>70.132500</td>\n","      <td>98572000</td>\n","    </tr>\n","    <tr>\n","      <th>2511</th>\n","      <td>71.067497</td>\n","      <td>71.222504</td>\n","      <td>70.730003</td>\n","      <td>71.172501</td>\n","      <td>48478800</td>\n","    </tr>\n","    <tr>\n","      <th>2512</th>\n","      <td>72.477501</td>\n","      <td>72.495003</td>\n","      <td>71.175003</td>\n","      <td>71.205002</td>\n","      <td>93121200</td>\n","    </tr>\n","    <tr>\n","      <th>2513</th>\n","      <td>72.449997</td>\n","      <td>73.492500</td>\n","      <td>72.029999</td>\n","      <td>72.779999</td>\n","      <td>146266000</td>\n","    </tr>\n","    <tr>\n","      <th>2514</th>\n","      <td>72.879997</td>\n","      <td>73.172501</td>\n","      <td>71.305000</td>\n","      <td>72.364998</td>\n","      <td>144114400</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2515 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cea8a908-85fe-4ec2-aee0-e954803b88ba')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cea8a908-85fe-4ec2-aee0-e954803b88ba button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cea8a908-85fe-4ec2-aee0-e954803b88ba');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fdd31ff0-9488-4426-9bd9-c5ccdd2f508f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fdd31ff0-9488-4426-9bd9-c5ccdd2f508f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fdd31ff0-9488-4426-9bd9-c5ccdd2f508f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e017be2d-e147-4ebd-b939-d668f5cc07fc\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e017be2d-e147-4ebd-b939-d668f5cc07fc button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 2515,\n  \"fields\": [\n    {\n      \"column\": [\n        \"Close\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.016253049378737,\n        \"min\": 6.85892915725708,\n        \"max\": 72.87999725341797,\n        \"num_unique_values\": 2407,\n        \"samples\": [\n          39.439998626708984,\n          27.2549991607666,\n          28.809999465942383\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"High\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.118350948209311,\n        \"min\": 7.0,\n        \"max\": 73.49250030517578,\n        \"num_unique_values\": 2385,\n        \"samples\": [\n          28.584999084472656,\n          27.587499618530273,\n          24.392499923706055\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Low\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.894064577193769,\n        \"min\": 6.794642925262451,\n        \"max\": 72.02999877929688,\n        \"num_unique_values\": 2399,\n        \"samples\": [\n          45.85499954223633,\n          41.220001220703125,\n          14.216071128845215\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Open\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.996450669070406,\n        \"min\": 6.870357036590576,\n        \"max\": 72.77999877929688,\n        \"num_unique_values\": 2405,\n        \"samples\": [\n          39.102500915527344,\n          28.02750015258789,\n          28.520000457763672\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Volume\",\n        \"AAPL\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 235293332,\n        \"min\": 45448000,\n        \"max\": 1880998000,\n        \"num_unique_values\": 2509,\n        \"samples\": [\n          211805600,\n          284174800,\n          117930400\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}],"source":["df"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":460,"status":"ok","timestamp":1729863225972,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"y0p2xsuk63lt","outputId":"46c26b76-7a0f-4669-c8d2-61325c803298"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ticker       AAPL\n","0             NaN\n","1             NaN\n","2             NaN\n","3             NaN\n","4             NaN\n","...           ...\n","2510    59.201075\n","2511    59.401700\n","2512    59.643125\n","2513    59.875125\n","2514    60.106325\n","\n","[2515 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-2c38af37-7eb8-4099-b377-df7696d1adbf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Ticker</th>\n","      <th>AAPL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2510</th>\n","      <td>59.201075</td>\n","    </tr>\n","    <tr>\n","      <th>2511</th>\n","      <td>59.401700</td>\n","    </tr>\n","    <tr>\n","      <th>2512</th>\n","      <td>59.643125</td>\n","    </tr>\n","    <tr>\n","      <th>2513</th>\n","      <td>59.875125</td>\n","    </tr>\n","    <tr>\n","      <th>2514</th>\n","      <td>60.106325</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2515 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2c38af37-7eb8-4099-b377-df7696d1adbf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2c38af37-7eb8-4099-b377-df7696d1adbf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2c38af37-7eb8-4099-b377-df7696d1adbf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-99de2364-cd98-4af0-80b8-dc48604cbba4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-99de2364-cd98-4af0-80b8-dc48604cbba4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-99de2364-cd98-4af0-80b8-dc48604cbba4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c09ea7b4-d669-421b-ab55-2d0a52887303\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('ma100')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c09ea7b4-d669-421b-ab55-2d0a52887303 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('ma100');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ma100","summary":"{\n  \"name\": \"ma100\",\n  \"rows\": 2515,\n  \"fields\": [\n    {\n      \"column\": \"AAPL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.797168814881458,\n        \"min\": 8.091171436309814,\n        \"max\": 60.106324920654295,\n        \"num_unique_values\": 2416,\n        \"samples\": [\n          13.99189640045166,\n          11.77618218421936,\n          28.186874980926515\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}],"source":["ma100 = df.Close.rolling(100).mean()\n","ma100"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":477},"executionInfo":{"elapsed":903,"status":"ok","timestamp":1729863232580,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"eGGNRzvZ9fkM","outputId":"3af671b2-8e28-4b0b-9ba7-101ceb328490"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7efec07a7850>]"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"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RERERESkUrLznINok8lUQyOpfgqiRUREREREpMKsVqu9Knd9UHdLpomIiIiIiEi1slisXDH9HzYdSbUf8/Wuu1loUBAtIiIiIiIiHopNyeauz9dyZe/mTgE0QGRw3V0PDQqiRURERERExEOvL9jJ1tg0tsZuL3HuurNa1cCITh6tiRYRERERERGPpOWYSz137zntTuJITj4F0SIiIiIiIuKRzNwCl8cHtIvC17tuh5l1+92JiIiIiIhIlTqRkcvKfYkuz4X41/0VwwqiRURERERExG0v/76j1HOhAb4ncSQ1Q0G0iIiIiIiIuG3/icxSz4UGKBMtIiIiIiIiYmexWks9p+ncIiIiIiIiIoXMBRbWH0op9XyIMtEiIiIiIiIihmMpOfbtUb2alThfHzLRdf8dioiIiIiISJWISysKol+/qgd920ZyJDmbd/7cA0DDEL+aGtpJo0y0iIiIiIiIuCW+MIg+q00kJpOJq89syfV9W9nPNwzxr6mhnTQKokVERERERMQtW2JTAWgZGWQ/FuTvbd8OD1SLKxEREREREREANhxKBmBg+yj7sWC/olXCTSMCT/qYTjatiRYRERERERG3xKflAtC8QVEm2tvLxN+PnoPFaiVYhcVEREREREREYP2hZA4lZQHQqNja5xYO07vrOk3nFhERERERkXKN/2qDfbtxWN0vIFYaBdEiIiIiIiJSrtiUbAA6xYQS5Fd/JzUriBYREREREZEy5ZgL7Ntf3dGvBkdS8xREi4iIiIiISJlSs80AeJmgQVDdb2NVFgXRIiIiIiIiUiZbJjrA1xuTyVTDo6lZCqJFRERERESkTLn5FsAIous7BdEiIiIiIiJSJlsm2t9HIaR+AiIiIiIiIlImZaKLKIgWERERERGRMikTXUQ/ARERERERESlTjtnIRPsrE60gWkRERERERMqWm19YnVuZaAXRIiIiIiIiUjZloosoiBYREREREZEy7T+RASgTDQqiRUREREREpAxzN8YybcleQNW5QUG0iIiIiIiIlGHKbzvs26rOrSBaREREREREypBd2N4KlIkGBdEiIiIiIiJShuw8xyBaIaR+AiIiIiIiIlKqvAKLfdvfR5loBdEiIiIiIiLiFmWiFUSLiIiIiIiIm5SJVhAtIiIiIiIiblImWkG0iIiIiIiIlCLHoTI3gL+qcyuIFhEREREREde2xKY67atPtIJoERERERERKcXaA8n27VB/H3q1aFCDo6kdPA6iY2NjueGGG4iKiiIwMJBu3bqxdu1a+3mr1cozzzxDkyZNCAwMZPjw4ezevbtKBy0iIiIiIiLVLzXbDMDYAa3Z8Mx5tIwKquER1TyPgujk5GQGDhyIr68vv//+O9u3b+f111+nQYOiTyNeeeUV3n77bd577z1Wr15NcHAw559/Pjk5OVU+eBEREREREak+aTlGEB0R5IuPtyYyA/h4cvHLL79MixYtmDVrlv1YmzZt7NtWq5U333yTp556issuuwyAzz77jOjoaH766SeuueaaKhq2iIiIiIiIVLevVh8CIDzQt2IPePZZiIyEa6+Fxo2rcGQ1x6OPEn7++WfOOOMMxowZQ+PGjenVqxcffvih/fz+/fuJi4tj+PDh9mPh4eH07duXlStXunxmbm4uaWlpTl8iIiIiIiJSsxLSimYTF1isnj8gLw9efhkmTICUlCobV03zKIjet28fM2bMoEOHDixYsIB77rmH+++/n08//RSAuLg4AKKjo53ui46Otp8rbsqUKYSHh9u/WrRoUZH3ISIiIiIiIlUoOcts3+7XNsrzB6xfD7m50LAhdOhQhSOrWR4F0RaLhd69ezN58mR69erFnXfeyR133MF7771X4QFMmjSJ1NRU+9fhw4cr/CwRERERERGpGhm5+fbtrs3CPX/AihXG9wEDwGSqolHVPI+C6CZNmtC5c2enY6effjqHDhnz5GNiYgCIj493uiY+Pt5+rjh/f3/CwsKcvkRERERERKRmZRYG0Z1iQiv2gGXLjO8DBlTRiGoHj4LogQMHsnPnTqdju3btolWrVoBRZCwmJobFixfbz6elpbF69Wr69+9fBcMVERERERGRk8GWiQ7x96getSEvD/7809h2qJlVF3j003jwwQcZMGAAkydP5qqrruLff//lgw8+4IMPPgDAZDIxYcIEXnzxRTp06ECbNm14+umnadq0KZdffnl1jF9ERERERESqgT2IDqhAEL1yJWRkQKNG0KtXFY+sZnn00zjzzDP58ccfmTRpEi+88AJt2rThzTff5Prrr7df8+ijj5KZmcmdd95JSkoKgwYNYv78+QQEBFT54EVERERERKRqWa1Wnvt5G/M2HwMguCKZ6Pnzje8jRoBX3eovbbJarRWoVV590tLSCA8PJzU1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\n"},"metadata":{}}],"source":["plt.figure(figsize=(12,6))\n","plt.plot(df['Close'])\n","plt.plot(ma100,'r')"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":774,"status":"ok","timestamp":1729863237579,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"Wnh9wJDT9wZg","outputId":"f2ef6877-93ad-43d9-cf97-a70be0ce85a0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ticker       AAPL\n","0             NaN\n","1             NaN\n","2             NaN\n","3             NaN\n","4             NaN\n","...           ...\n","2510    54.132313\n","2511    54.261513\n","2512    54.396763\n","2513    54.529350\n","2514    54.661100\n","\n","[2515 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-87d52526-fe1d-479a-8360-618825a39888\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Ticker</th>\n","      <th>AAPL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2510</th>\n","      <td>54.132313</td>\n","    </tr>\n","    <tr>\n","      <th>2511</th>\n","      <td>54.261513</td>\n","    </tr>\n","    <tr>\n","      <th>2512</th>\n","      <td>54.396763</td>\n","    </tr>\n","    <tr>\n","      <th>2513</th>\n","      <td>54.529350</td>\n","    </tr>\n","    <tr>\n","      <th>2514</th>\n","      <td>54.661100</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2515 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-87d52526-fe1d-479a-8360-618825a39888')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-87d52526-fe1d-479a-8360-618825a39888 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-87d52526-fe1d-479a-8360-618825a39888');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f68646dc-2c43-44d0-9e8a-642f75cba4ac\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f68646dc-2c43-44d0-9e8a-642f75cba4ac')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f68646dc-2c43-44d0-9e8a-642f75cba4ac button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_7fe50be9-c2e3-4ec7-8bbe-864cfcfb4705\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('ma200')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7fe50be9-c2e3-4ec7-8bbe-864cfcfb4705 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('ma200');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ma200","summary":"{\n  \"name\": \"ma200\",\n  \"rows\": 2515,\n  \"fields\": [\n    {\n      \"column\": \"AAPL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.030839817991268,\n        \"min\": 8.767198238372803,\n        \"max\": 54.66109998703003,\n        \"num_unique_values\": 2316,\n        \"samples\": [\n          19.634942893981933,\n          21.46911789894104,\n          10.615773248672486\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}],"source":["ma200 = df.Close.rolling(200).mean()\n","ma200"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":477},"executionInfo":{"elapsed":1039,"status":"ok","timestamp":1729863242211,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"PxXOb4-u-zzR","outputId":"cba256fa-708d-4492-d770-f2a23be51765"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7efebbd158a0>]"]},"metadata":{},"execution_count":13},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["plt.figure(figsize = (12,6))\n","plt.plot(df['Close'])\n","plt.plot(ma200,'g')\n","plt.plot(ma100,'r')"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":793,"status":"ok","timestamp":1729863246675,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"4VPe1b7RGCg-","outputId":"02a84637-8570-4cb5-c78c-ca8e4d3ecefc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2515, 5)"]},"metadata":{},"execution_count":14}],"source":["df.shape"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":517,"status":"ok","timestamp":1729863250997,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"9cNJ5CL_Mei1","outputId":"7510b824-779a-4e8a-833e-14490dba80e1"},"outputs":[{"output_type":"stream","name":"stdout","text":["(1760, 1)\n","(755, 1)\n"]}],"source":["#splitting data into training and testing\n","data_training = pd.DataFrame(df['Close'][0:int(len(df)*0.70)])\n","data_testing = pd.DataFrame(df['Close'][int(len(df)*0.70):int(len(df))])\n","print(data_training.shape)\n","print(data_testing.shape)"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":556,"status":"ok","timestamp":1729863395456,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"QOZSi5wwPDD8","outputId":"0f650083-8027-491d-abc3-bf83e436bcf5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ticker      AAPL\n","0       7.643214\n","1       7.656429\n","2       7.534643\n","3       7.520714\n","4       7.570714"],"text/html":["\n","  <div id=\"df-b4516dee-cc28-477b-9e75-b53bb4c1cd03\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Ticker</th>\n","      <th>AAPL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>7.643214</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7.656429</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7.534643</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7.520714</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7.570714</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4516dee-cc28-477b-9e75-b53bb4c1cd03')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b4516dee-cc28-477b-9e75-b53bb4c1cd03 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b4516dee-cc28-477b-9e75-b53bb4c1cd03');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-82a74683-7039-4548-8226-944bec11a358\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-82a74683-7039-4548-8226-944bec11a358')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-82a74683-7039-4548-8226-944bec11a358 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_training","summary":"{\n  \"name\": \"data_training\",\n  \"rows\": 1760,\n  \"fields\": [\n    {\n      \"column\": \"AAPL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.079895234202311,\n        \"min\": 6.85892915725708,\n        \"max\": 33.25,\n        \"num_unique_values\": 1682,\n        \"samples\": [\n          27.3174991607666,\n          18.199642181396484,\n          27.127500534057617\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}],"source":["data_training.head()\n"]},{"cell_type":"code","execution_count":31,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":692,"status":"ok","timestamp":1729863436118,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"m6JPNo7Cfj7I","outputId":"1826929d-1f9d-4f74-9e9e-7750517b9d5f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1660, 100, 1)"]},"metadata":{},"execution_count":31}],"source":["x_train.shape"]},{"cell_type":"markdown","metadata":{"id":"hUzPivvdPR8A"},"source":["data_testing.head()"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"NGn1RPgwQffg","executionInfo":{"status":"ok","timestamp":1729863406259,"user_tz":-330,"elapsed":2553,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"}}},"outputs":[],"source":["from sklearn.preprocessing import MinMaxScaler\n","scaler = MinMaxScaler(feature_range=(0,1))"]},{"cell_type":"code","execution_count":26,"metadata":{"id":"4xQCqN_xWlvO","executionInfo":{"status":"ok","timestamp":1729863409986,"user_tz":-330,"elapsed":508,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"}}},"outputs":[],"source":["data_training_array = data_training.values  # Convert data_training to NumPy array\n","\n","x_train = []\n","y_train = []\n","\n","for i in range(100, data_training_array.shape[0]):\n","    x_train.append(data_training_array[i-100:i])\n","    y_train.append(data_training_array[i, 0])\n","\n","x_train, y_train = np.array(x_train), np.array(y_train)"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"VQZGgSn8Z3QZ","executionInfo":{"status":"ok","timestamp":1729863414041,"user_tz":-330,"elapsed":479,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"}}},"outputs":[],"source":["#ML model"]},{"cell_type":"code","execution_count":28,"metadata":{"id":"FW6Ydr0IZ6K1","executionInfo":{"status":"ok","timestamp":1729863420338,"user_tz":-330,"elapsed":4136,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"}}},"outputs":[],"source":["from keras.layers import Dense, Dropout, LSTM\n","from keras.models import Sequential"]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":493,"status":"ok","timestamp":1729863423833,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"fdWRaHtpcdAD","outputId":"3738f0c2-de95-4c7b-b1ca-97fafa56788c"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/layers/rnn/rnn.py:204: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(**kwargs)\n"]}],"source":["from re import M\n","model = Sequential()\n","model.add(LSTM(units=50, activation='relu', return_sequences=True, input_shape=(x_train.shape[1], 1)))\n","model.add(Dropout(0.2))\n","\n","\n","model.add(LSTM(units=60, activation='relu', return_sequences=True))\n","model.add(Dropout(0.3))\n","\n","\n","model.add(LSTM(units=80, activation='relu', return_sequences=True))\n","model.add(Dropout(0.4))\n","\n","\n","model.add(LSTM(units=120, activation='relu'))\n","model.add(Dropout(0.5))\n","\n","\n","model.add(Dense(units=1))"]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":417},"executionInfo":{"elapsed":560,"status":"ok","timestamp":1729863428093,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"1BzhhP0Kk_KY","outputId":"126dbc05-8581-49bb-d827-be7f1e196cd5"},"outputs":[{"output_type":"display_data","data":{"text/plain":["\u001b[1mModel: \"sequential\"\u001b[0m\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ lstm (\u001b[38;5;33mLSTM\u001b[0m)                          │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m50\u001b[0m)             │          \u001b[38;5;34m10,400\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout (\u001b[38;5;33mDropout\u001b[0m)                    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m50\u001b[0m)             │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ lstm_1 (\u001b[38;5;33mLSTM\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m60\u001b[0m)             │          \u001b[38;5;34m26,640\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout_1 (\u001b[38;5;33mDropout\u001b[0m)                  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m60\u001b[0m)             │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ lstm_2 (\u001b[38;5;33mLSTM\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m80\u001b[0m)             │          \u001b[38;5;34m45,120\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout_2 (\u001b[38;5;33mDropout\u001b[0m)                  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m80\u001b[0m)             │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ lstm_3 (\u001b[38;5;33mLSTM\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m120\u001b[0m)                 │          \u001b[38;5;34m96,480\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout_3 (\u001b[38;5;33mDropout\u001b[0m)                  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m120\u001b[0m)                 │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense (\u001b[38;5;33mDense\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)                   │             \u001b[38;5;34m121\u001b[0m │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ lstm (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                          │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)             │          <span style=\"color: #00af00; text-decoration-color: #00af00\">10,400</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)             │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ lstm_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">60</span>)             │          <span style=\"color: #00af00; text-decoration-color: #00af00\">26,640</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">60</span>)             │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ lstm_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">80</span>)             │          <span style=\"color: #00af00; text-decoration-color: #00af00\">45,120</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">80</span>)             │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ lstm_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">120</span>)                 │          <span style=\"color: #00af00; text-decoration-color: #00af00\">96,480</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">120</span>)                 │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)                   │             <span style=\"color: #00af00; text-decoration-color: #00af00\">121</span> │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m178,761\u001b[0m (698.29 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">178,761</span> (698.29 KB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m178,761\u001b[0m (698.29 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">178,761</span> (698.29 KB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}}],"source":["model.summary()"]},{"cell_type":"code","execution_count":32,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":947906,"status":"ok","timestamp":1729864394309,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"gaxgZen9lJd8","outputId":"9ca75de4-e4c7-47ce-f897-1537b7306a5d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 293ms/step - loss: nan\n","Epoch 2/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 275ms/step - loss: nan\n","Epoch 3/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 271ms/step - loss: nan\n","Epoch 4/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 269ms/step - loss: nan\n","Epoch 5/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 267ms/step - loss: nan\n","Epoch 6/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 272ms/step - loss: nan\n","Epoch 7/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 273ms/step - loss: nan\n","Epoch 8/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 270ms/step - loss: nan\n","Epoch 9/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 280ms/step - loss: nan\n","Epoch 10/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 276ms/step - loss: nan\n","Epoch 11/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 272ms/step - loss: nan\n","Epoch 12/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 275ms/step - loss: nan\n","Epoch 13/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 272ms/step - loss: nan\n","Epoch 14/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 269ms/step - loss: nan\n","Epoch 15/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 270ms/step - loss: nan\n","Epoch 16/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 271ms/step - loss: nan\n","Epoch 17/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 270ms/step - loss: nan\n","Epoch 18/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 266ms/step - loss: nan\n","Epoch 19/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 270ms/step - loss: nan\n","Epoch 20/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 272ms/step - loss: nan\n","Epoch 21/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 270ms/step - loss: nan\n","Epoch 22/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 271ms/step - loss: nan\n","Epoch 23/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 273ms/step - loss: nan\n","Epoch 24/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 269ms/step - loss: nan\n","Epoch 25/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 270ms/step - loss: nan\n","Epoch 26/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 269ms/step - loss: nan\n","Epoch 27/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 272ms/step - loss: nan\n","Epoch 28/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 270ms/step - loss: nan\n","Epoch 29/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 271ms/step - loss: nan\n","Epoch 30/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 272ms/step - loss: nan\n","Epoch 31/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 276ms/step - loss: nan\n","Epoch 32/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 272ms/step - loss: nan\n","Epoch 33/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 276ms/step - loss: nan\n","Epoch 34/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 272ms/step - loss: nan\n","Epoch 35/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 271ms/step - loss: nan\n","Epoch 36/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 271ms/step - loss: nan\n","Epoch 37/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 273ms/step - loss: nan\n","Epoch 38/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 268ms/step - loss: nan\n","Epoch 39/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 271ms/step - loss: nan\n","Epoch 40/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 271ms/step - loss: nan\n","Epoch 41/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 270ms/step - loss: nan\n","Epoch 42/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 272ms/step - loss: nan\n","Epoch 43/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 271ms/step - loss: nan\n","Epoch 44/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 274ms/step - loss: nan\n","Epoch 45/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 273ms/step - loss: nan\n","Epoch 46/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 277ms/step - loss: nan\n","Epoch 47/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 272ms/step - loss: nan\n","Epoch 48/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 278ms/step - loss: nan\n","Epoch 50/50\n","\u001b[1m52/52\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 268ms/step - loss: nan\n"]}],"source":["model.compile(optimizer='adam', loss='mean_squared_error')\n","history = model.fit(x_train, y_train, epochs=50)"]},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":459,"status":"ok","timestamp":1729864400321,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"kf6t2T30rmzY","outputId":"1f1546f1-f80c-47d6-c8ab-65612700220e"},"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"]}],"source":["model.save('keras_model.h5')"]},{"cell_type":"code","execution_count":34,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":1649,"status":"ok","timestamp":1729864405646,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"qO8H-ri8sHIY","outputId":"e149f1a3-2af8-44e1-eba8-2854a046ceb1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ticker       AAPL\n","1760    29.182501\n","1761    28.955000\n","1762    29.037500\n","1763    29.004999\n","1764    29.152500"],"text/html":["\n","  <div id=\"df-fd14a8d0-2c10-4ad8-acd6-2915d0fe864a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Ticker</th>\n","      <th>AAPL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1760</th>\n","      <td>29.182501</td>\n","    </tr>\n","    <tr>\n","      <th>1761</th>\n","      <td>28.955000</td>\n","    </tr>\n","    <tr>\n","      <th>1762</th>\n","      <td>29.037500</td>\n","    </tr>\n","    <tr>\n","      <th>1763</th>\n","      <td>29.004999</td>\n","    </tr>\n","    <tr>\n","      <th>1764</th>\n","      <td>29.152500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fd14a8d0-2c10-4ad8-acd6-2915d0fe864a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fd14a8d0-2c10-4ad8-acd6-2915d0fe864a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fd14a8d0-2c10-4ad8-acd6-2915d0fe864a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5b349bd4-4ab2-4449-b5c8-5852206c9a2d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5b349bd4-4ab2-4449-b5c8-5852206c9a2d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5b349bd4-4ab2-4449-b5c8-5852206c9a2d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_testing","summary":"{\n  \"name\": \"data_testing\",\n  \"rows\": 755,\n  \"fields\": [\n    {\n      \"column\": \"AAPL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.586473373132765,\n        \"min\": 28.954999923706055,\n        \"max\": 72.87999725341797,\n        \"num_unique_values\": 727,\n        \"samples\": [\n          42.70000076293945,\n          65.55000305175781,\n          48.70500183105469\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":34}],"source":["data_testing.head()"]},{"cell_type":"code","execution_count":35,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":656,"status":"ok","timestamp":1729864418479,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"6R7Kim8GsT7l","outputId":"60f6bff2-33a2-40d1-d35a-b64f0ee63b27"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ticker       AAPL\n","1755    29.264999\n","1756    29.072500\n","1757    29.129999\n","1758    29.315001\n","1759    29.190001"],"text/html":["\n","  <div id=\"df-00df7653-e6bf-40b1-bbf4-ddc446782a0e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Ticker</th>\n","      <th>AAPL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1755</th>\n","      <td>29.264999</td>\n","    </tr>\n","    <tr>\n","      <th>1756</th>\n","      <td>29.072500</td>\n","    </tr>\n","    <tr>\n","      <th>1757</th>\n","      <td>29.129999</td>\n","    </tr>\n","    <tr>\n","      <th>1758</th>\n","      <td>29.315001</td>\n","    </tr>\n","    <tr>\n","      <th>1759</th>\n","      <td>29.190001</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00df7653-e6bf-40b1-bbf4-ddc446782a0e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-00df7653-e6bf-40b1-bbf4-ddc446782a0e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-00df7653-e6bf-40b1-bbf4-ddc446782a0e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0a39e142-1ef6-43f3-b74d-712b4224959c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0a39e142-1ef6-43f3-b74d-712b4224959c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0a39e142-1ef6-43f3-b74d-712b4224959c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data_training\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"AAPL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09817725074760486,\n        \"min\": 29.072500228881836,\n        \"max\": 29.315000534057617,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          29.072500228881836,\n          29.190000534057617,\n          29.1299991607666\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}],"source":["data_training.tail()"]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":825,"status":"ok","timestamp":1729864426787,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"X1rKRFj7swMG","outputId":"df5c2b61-ad8a-4c0a-b0c2-49eb7e462697"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ticker       AAPL\n","0       27.092501\n","1       27.202499\n","2       27.000000\n","3       26.982500\n","4       27.045000"],"text/html":["\n","  <div id=\"df-8d632acd-f0ac-471c-8336-858b9626e04e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Ticker</th>\n","      <th>AAPL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>27.092501</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>27.202499</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>27.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>26.982500</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>27.045000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d632acd-f0ac-471c-8336-858b9626e04e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8d632acd-f0ac-471c-8336-858b9626e04e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8d632acd-f0ac-471c-8336-858b9626e04e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-898ee8b6-d29e-42ab-8dfe-26d5c5969f9d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-898ee8b6-d29e-42ab-8dfe-26d5c5969f9d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-898ee8b6-d29e-42ab-8dfe-26d5c5969f9d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"final_df","summary":"{\n  \"name\": \"final_df\",\n  \"rows\": 855,\n  \"fields\": [\n    {\n      \"column\": \"AAPL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.863210067575729,\n        \"min\": 25.782499313354492,\n        \"max\": 72.87999725341797,\n        \"num_unique_values\": 821,\n        \"samples\": [\n          42.73249816894531,\n          35.912498474121094,\n          27.107500076293945\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":36}],"source":["past_100days_data = data_training.tail(100)\n","final_df = pd.concat([past_100days_data, data_testing], ignore_index=True)\n","final_df.head()"]},{"cell_type":"code","execution_count":37,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":474,"status":"ok","timestamp":1729864432564,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"_TtggysquyAT","outputId":"5c736a8f-7b2e-4cfe-f49b-6238568402db"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.02781467],\n","       [0.03015022],\n","       [0.02585064],\n","       [0.02547908],\n","       [0.02680611],\n","       [0.03370671],\n","       [0.03317586],\n","       [0.03232658],\n","       [0.03158344],\n","       [0.03306972],\n","       [0.02855781],\n","       [0.03036255],\n","       [0.02600988],\n","       [0.02356814],\n","       [0.02022403],\n","       [0.01958704],\n","       [0.01523437],\n","       [0.01576518],\n","       [0.01910933],\n","       [0.02441747],\n","       [0.02425819],\n","       [0.02776158],\n","       [0.01268645],\n","       [0.        ],\n","       [0.01226183],\n","       [0.02558522],\n","       [0.04586231],\n","       [0.06603324],\n","       [0.06258295],\n","       [0.05547006],\n","       [0.05541697],\n","       [0.05531082],\n","       [0.06099053],\n","       [0.05085197],\n","       [0.05175434],\n","       [0.05286905],\n","       [0.05743405],\n","       [0.04803866],\n","       [0.05265676],\n","       [0.04984341],\n","       [0.05239133],\n","       [0.05265676],\n","       [0.05711557],\n","       [0.05801795],\n","       [0.06858117],\n","       [0.0699082 ],\n","       [0.07542863],\n","       [0.07351774],\n","       [0.076968  ],\n","       [0.07654338],\n","       [0.07611871],\n","       [0.07426087],\n","       [0.07394236],\n","       [0.07150062],\n","       [0.07707418],\n","       [0.08025906],\n","       [0.06613939],\n","       [0.06024739],\n","       [0.0562132 ],\n","       [0.05525773],\n","       [0.04437603],\n","       [0.04490684],\n","       [0.03556455],\n","       [0.03030946],\n","       [0.03864328],\n","       [0.04209353],\n","       [0.04113807],\n","       [0.02473594],\n","       [0.02813315],\n","       [0.013695  ],\n","       [0.02112641],\n","       [0.03641383],\n","       [0.0362015 ],\n","       [0.0367854 ],\n","       [0.04565002],\n","       [0.04602158],\n","       [0.04299595],\n","       [0.04596849],\n","       [0.04480069],\n","       [0.0442168 ],\n","       [0.03922713],\n","       [0.03375976],\n","       [0.03593611],\n","       [0.03174268],\n","       [0.0362015 ],\n","       [0.0419343 ],\n","       [0.04772019],\n","       [0.05743405],\n","       [0.05398379],\n","       [0.06401617],\n","       [0.06401617],\n","       [0.06736028],\n","       [0.06815651],\n","       [0.07171295],\n","       [0.07335846],\n","       [0.07394236],\n","       [0.06985511],\n","       [0.07107596],\n","       [0.07500401],\n","       [0.07234994],\n","       [0.0721907 ],\n","       [0.06736028],\n","       [0.06911197],\n","       [0.06842189],\n","       [0.07155371],\n","       [0.07845431],\n","       [0.08418707],\n","       [0.08482406],\n","       [0.08822126],\n","       [0.08556719],\n","       [0.08445249],\n","       [0.0895483 ],\n","       [0.0894952 ],\n","       [0.0883805 ],\n","       [0.0895483 ],\n","       [0.08997296],\n","       [0.08938906],\n","       [0.09952758],\n","       [0.0998461 ],\n","       [0.09989915],\n","       [0.09820055],\n","       [0.09671427],\n","       [0.1359945 ],\n","       [0.1348267 ],\n","       [0.1377462 ],\n","       [0.144169  ],\n","       [0.15075112],\n","       [0.15345824],\n","       [0.15547536],\n","       [0.1538829 ],\n","       [0.16009341],\n","       [0.16927655],\n","       [0.17187748],\n","       [0.17102824],\n","       [0.17299223],\n","       [0.17819418],\n","       [0.18037053],\n","       [0.1772918 ],\n","       [0.17798189],\n","       [0.17941503],\n","       [0.17973358],\n","       [0.1945963 ],\n","       [0.19019062],\n","       [0.19454325],\n","       [0.19220766],\n","       [0.19316316],\n","       [0.19040291],\n","       [0.18870427],\n","       [0.19114605],\n","       [0.19146452],\n","       [0.19034986],\n","       [0.19815283],\n","       [0.19937368],\n","       [0.195658  ],\n","       [0.20346096],\n","       [0.19486173],\n","       [0.20324859],\n","       [0.20059453],\n","       [0.19910825],\n","       [0.20038224],\n","       [0.21588199],\n","       [0.21758055],\n","       [0.21657199],\n","       [0.21513885],\n","       [0.21535114],\n","       [0.22103089],\n","       [0.21704978],\n","       [0.21513885],\n","       [0.21344021],\n","       [0.21253783],\n","       [0.20436334],\n","       [0.20526571],\n","       [0.20128461],\n","       [0.20542495],\n","       [0.2020808 ],\n","       [0.19932054],\n","       [0.20866292],\n","       [0.20776054],\n","       [0.21503267],\n","       [0.21975691],\n","       [0.21524496],\n","       [0.21582885],\n","       [0.21508572],\n","       [0.2306386 ],\n","       [0.23557513],\n","       [0.23318649],\n","       [0.23037318],\n","       [0.243272  ],\n","       [0.26476989],\n","       [0.26997192],\n","       [0.26609692],\n","       [0.26975955],\n","       [0.2811721 ],\n","       [0.27904879],\n","       [0.27782794],\n","       [0.25011946],\n","       [0.26227506],\n","       [0.26503531],\n","       [0.26997192],\n","       [0.26896336],\n","       [0.26652158],\n","       [0.26933489],\n","       [0.2679548 ],\n","       [0.26827328],\n","       [0.26344285],\n","       [0.26567226],\n","       [0.27772176],\n","       [0.26965337],\n","       [0.27241362],\n","       [0.2772971 ],\n","       [0.27528006],\n","       [0.2433781 ],\n","       [0.22448114],\n","       [0.23069166],\n","       [0.22310106],\n","       [0.21848292],\n","       [0.20776054],\n","       [0.22936462],\n","       [0.22230479],\n","       [0.22686979],\n","       [0.22559589],\n","       [0.22904615],\n","       [0.22660445],\n","       [0.21551038],\n","       [0.2266575 ],\n","       [0.21524496],\n","       [0.21704978],\n","       [0.21428953],\n","       [0.21742131],\n","       [0.21020224],\n","       [0.21789902],\n","       [0.22257021],\n","       [0.22506504],\n","       [0.22617979],\n","       [0.2369553 ],\n","       [0.24369658],\n","       [0.24645683],\n","       [0.24921708],\n","       [0.25420675],\n","       [0.25059717],\n","       [0.25022564],\n","       [0.25988641],\n","       [0.26333675],\n","       [0.26715862],\n","       [0.25176497],\n","       [0.24613836],\n","       [0.24205107],\n","       [0.24905785],\n","       [0.28669252],\n","       [0.27835879],\n","       [0.28271142],\n","       [0.2955571 ],\n","       [0.30229846],\n","       [0.30750041],\n","       [0.27703176],\n","       [0.28849727],\n","       [0.30107761],\n","       [0.31036685],\n","       [0.30691651],\n","       [0.29051439],\n","       [0.28860346],\n","       [0.28706413],\n","       [0.300706  ],\n","       [0.30176761],\n","       [0.29799888],\n","       [0.30113066],\n","       [0.30967677],\n","       [0.3173205 ],\n","       [0.31965609],\n","       [0.32310635],\n","       [0.32337177],\n","       [0.31291474],\n","       [0.31201236],\n","       [0.30856202],\n","       [0.29460168],\n","       [0.30983601],\n","       [0.3064388 ],\n","       [0.30001592],\n","       [0.2927438 ],\n","       [0.30123685],\n","       [0.29481397],\n","       [0.29513244],\n","       [0.28101286],\n","       [0.26678701],\n","       [0.2588248 ],\n","       [0.25171192],\n","       [0.26545997],\n","       [0.27124582],\n","       [0.26620311],\n","       [0.27066193],\n","       [0.26901642],\n","       [0.27257286],\n","       [0.26726472],\n","       [0.27740328],\n","       [0.27692557],\n","       [0.27979193],\n","       [0.2801104 ],\n","       [0.28356074],\n","       [0.28064125],\n","       [0.28589634],\n","       [0.30123685],\n","       [0.30436863],\n","       [0.30059982],\n","       [0.28053506],\n","       [0.28196828],\n","       [0.28154362],\n","       [0.28648023],\n","       [0.28281761],\n","       [0.28812574],\n","       [0.31806364],\n","       [0.33754449],\n","       [0.34985933],\n","       [0.33844687],\n","       [0.3449228 ],\n","       [0.36822552],\n","       [0.37751476],\n","       [0.38048731],\n","       [0.38807798],\n","       [0.38616705],\n","       [0.37974417],\n","       [0.37602849],\n","       [0.36206806],\n","       [0.3500717 ],\n","       [0.36079416],\n","       [0.35575136],\n","       [0.35484899],\n","       [0.37162273],\n","       [0.38128357],\n","       [0.38133663],\n","       [0.37666544],\n","       [0.3712512 ],\n","       [0.35219492],\n","       [0.36477526],\n","       [0.36052874],\n","       [0.35389357],\n","       [0.35304424],\n","       [0.34970009],\n","       [0.35134568],\n","       [0.35161102],\n","       [0.36912789],\n","       [0.36397899],\n","       [0.36700467],\n","       [0.36673925],\n","       [0.37602849],\n","       [0.38903341],\n","       [0.37905409],\n","       [0.37804561],\n","       [0.38154892],\n","       [0.38154892],\n","       [0.35798085],\n","       [0.35814009],\n","       [0.36068797],\n","       [0.35086789],\n","       [0.36695154],\n","       [0.3667923 ],\n","       [0.37103883],\n","       [0.38149586],\n","       [0.37804561],\n","       [0.37793942],\n","       [0.37772705],\n","       [0.38298214],\n","       [0.39258985],\n","       [0.38781256],\n","       [0.40325926],\n","       [0.4041085 ],\n","       [0.39986206],\n","       [0.39211214],\n","       [0.39232443],\n","       [0.37735552],\n","       [0.36084721],\n","       [0.36297043],\n","       [0.34412661],\n","       [0.33887153],\n","       [0.34131322],\n","       [0.3431711 ],\n","       [0.30452787],\n","       [0.28324227],\n","       [0.31795745],\n","       [0.29943202],\n","       [0.2761293 ],\n","       [0.28281761],\n","       [0.31625889],\n","       [0.3249111 ],\n","       [0.34099475],\n","       [0.37082654],\n","       [0.36785391],\n","       [0.36477526],\n","       [0.36063492],\n","       [0.36822552],\n","       [0.38414993],\n","       [0.40256918],\n","       [0.39949045],\n","       [0.39805723],\n","       [0.38149586],\n","       [0.38791875],\n","       [0.39115671],\n","       [0.39036044],\n","       [0.3816551 ],\n","       [0.39179366],\n","       [0.40793037],\n","       [0.41716656],\n","       [0.40787731],\n","       [0.39975587],\n","       [0.40087053],\n","       [0.39752646],\n","       [0.38308832],\n","       [0.38276985],\n","       [0.36169653],\n","       [0.34885085],\n","       [0.32809601],\n","       [0.36965874],\n","       [0.34614365],\n","       [0.33627051],\n","       [0.3431711 ],\n","       [0.33733212],\n","       [0.34640907],\n","       [0.36350128],\n","       [0.36981798],\n","       [0.34635602],\n","       [0.3552206 ],\n","       [0.37220662],\n","       [0.36790705],\n","       [0.37693086],\n","       [0.38006264],\n","       [0.38584858],\n","       [0.39869426],\n","       [0.39657096],\n","       [0.36981798],\n","       [0.33223635],\n","       [0.32968847],\n","       [0.31747974],\n","       [0.32124847],\n","       [0.32427415],\n","       [0.31418872],\n","       [0.32979457],\n","       [0.35017788],\n","       [0.38982968],\n","       [0.39152824],\n","       [0.42836673],\n","       [0.43542656],\n","       [0.4401508 ],\n","       [0.44710445],\n","       [0.46133022],\n","       [0.45363344],\n","       [0.45129784],\n","       [0.44222097],\n","       [0.45145708],\n","       [0.44514046],\n","       [0.44153089],\n","       [0.44853767],\n","       [0.44604284],\n","       [0.45241259],\n","       [0.45129784],\n","       [0.45358038],\n","       [0.44997081],\n","       [0.44784758],\n","       [0.44450343],\n","       [0.46239191],\n","       [0.47083183],\n","       [0.47868785],\n","       [0.48224429],\n","       [0.47948412],\n","       [0.47014175],\n","       [0.46764692],\n","       [0.47322048],\n","       [0.46483361],\n","       [0.46536445],\n","       [0.45496047],\n","       [0.4544297 ],\n","       [0.43823987],\n","       [0.44253945],\n","       [0.43701902],\n","       [0.43415258],\n","       [0.4195552 ],\n","       [0.43155156],\n","       [0.43011842],\n","       [0.43723131],\n","       [0.43516114],\n","       [0.44614894],\n","       [0.42884444],\n","       [0.43670046],\n","       [0.45034242],\n","       [0.46419666],\n","       [0.46297581],\n","       [0.4498647 ],\n","       [0.4665853 ],\n","       [0.46817776],\n","       [0.46594835],\n","       [0.46881471],\n","       [0.46324115],\n","       [0.47109725],\n","       [0.46876166],\n","       [0.46966403],\n","       [0.47704234],\n","       [0.48670319],\n","       [0.48346522],\n","       [0.46631988],\n","       [0.46064022],\n","       [0.46265725],\n","       [0.52216151],\n","       [0.55342644],\n","       [0.55661135],\n","       [0.56234415],\n","       [0.55194017],\n","       [0.5526833 ],\n","       [0.56133559],\n","       [0.55416957],\n","       [0.56128246],\n","       [0.56595365],\n","       [0.56855466],\n","       [0.58490374],\n","       [0.60751637],\n","       [0.59626315],\n","       [0.59403366],\n","       [0.59408679],\n","       [0.59642239],\n","       [0.59997883],\n","       [0.60942731],\n","       [0.6187696 ],\n","       [0.63618028],\n","       [0.64706198],\n","       [0.66086317],\n","       [0.66473809],\n","       [0.65682894],\n","       [0.63681732],\n","       [0.62726265],\n","       [0.61149748],\n","       [0.64079842],\n","       [0.6260418 ],\n","       [0.65438724],\n","       [0.64074529],\n","       [0.60910883],\n","       [0.61101976],\n","       [0.61170977],\n","       [0.62052129],\n","       [0.60794103],\n","       [0.62455545],\n","       [0.63198689],\n","       [0.62259146],\n","       [0.64663732],\n","       [0.6508308 ],\n","       [0.65889911],\n","       [0.66962157],\n","       [0.68443132],\n","       [0.66277411],\n","       [0.64313393],\n","       [0.64037376],\n","       [0.65682894],\n","       [0.60104044],\n","       [0.59090188],\n","       [0.63156223],\n","       [0.60634858],\n","       [0.63177452],\n","       [0.62667875],\n","       [0.59923569],\n","       [0.61669943],\n","       [0.62381231],\n","       [0.63485325],\n","       [0.59429908],\n","       [0.61930045],\n","       [0.60072196],\n","       [0.57917094],\n","       [0.58479755],\n","       [0.61431078],\n","       [0.63214613],\n","       [0.55390415],\n","       [0.52263922],\n","       [0.53421101],\n","       [0.56701526],\n","       [0.55926542],\n","       [0.53792669],\n","       [0.48325285],\n","       [0.47295505],\n","       [0.4441319 ],\n","       [0.46860242],\n","       [0.47985565],\n","       [0.43914224],\n","       [0.39200595],\n","       [0.39094434],\n","       [0.36711078],\n","       [0.37947875],\n","       [0.37746171],\n","       [0.41302621],\n","       [0.40564791],\n","       [0.40049901],\n","       [0.43362181],\n","       [0.39046663],\n","       [0.38000959],\n","       [0.34693992],\n","       [0.35283195],\n","       [0.34768305],\n","       [0.35017788],\n","       [0.35999789],\n","       [0.33096237],\n","       [0.32278788],\n","       [0.33409423],\n","       [0.30659804],\n","       [0.28504701],\n","       [0.25266734],\n","       [0.23196564],\n","       [0.28685176],\n","       [0.28143744],\n","       [0.2818621 ],\n","       [0.28987744],\n","       [0.29083286],\n","       [0.20733588],\n","       [0.23955624],\n","       [0.23780454],\n","       [0.25277353],\n","       [0.26636235],\n","       [0.26896336],\n","       [0.26094802],\n","       [0.24879242],\n","       [0.26508845],\n","       [0.27501464],\n","       [0.27989811],\n","       [0.28499396],\n","       [0.26630929],\n","       [0.26960031],\n","       [0.26312438],\n","       [0.28998354],\n","       [0.28223371],\n","       [0.27363447],\n","       [0.32974152],\n","       [0.33605822],\n","       [0.33648288],\n","       [0.36159035],\n","       [0.37714315],\n","       [0.37746171],\n","       [0.35994484],\n","       [0.35713153],\n","       [0.3519295 ],\n","       [0.35967942],\n","       [0.3559106 ],\n","       [0.3592017 ],\n","       [0.35718458],\n","       [0.35989171],\n","       [0.36573069],\n","       [0.36058179],\n","       [0.37072035],\n","       [0.37740858],\n","       [0.37793942],\n","       [0.38080578],\n","       [0.37167578],\n","       [0.38133663],\n","       [0.38600781],\n","       [0.38430917],\n","       [0.37894798],\n","       [0.36822552],\n","       [0.37040188],\n","       [0.40219757],\n","       [0.41286698],\n","       [0.4171135 ],\n","       [0.42783588],\n","       [0.44052233],\n","       [0.45060784],\n","       [0.44269868],\n","       [0.45135097],\n","       [0.48813633],\n","       [0.46669149],\n","       [0.4544297 ],\n","       [0.44407877],\n","       [0.45299648],\n","       [0.45432352],\n","       [0.46085251],\n","       [0.46770005],\n","       [0.48245666],\n","       [0.4895165 ],\n","       [0.49132124],\n","       [0.49827489],\n","       [0.51473015],\n","       [0.51154524],\n","       [0.51749032],\n","       [0.50862574],\n","       [0.50820108],\n","       [0.51011202],\n","       [0.5102182 ],\n","       [0.5308138 ],\n","       [0.53468872],\n","       [0.53824516],\n","       [0.55390415],\n","       [0.55220559],\n","       [0.54222626],\n","       [0.53702431],\n","       [0.53866982],\n","       [0.51775575],\n","       [0.57004093],\n","       [0.56276873],\n","       [0.57656992],\n","       [0.55921229],\n","       [0.52938058],\n","       [0.52959287],\n","       [0.51802117],\n","       [0.49923032],\n","       [0.43839911],\n","       [0.45400504],\n","       [0.46600141],\n","       [0.46154259],\n","       [0.45580979],\n","       [0.42443868],\n","       [0.44307029],\n","       [0.42279317],\n","       [0.40623181],\n","       [0.40256918],\n","       [0.39864113],\n","       [0.39412926],\n","       [0.39901273],\n","       [0.38186747],\n","       [0.37247205],\n","       [0.40612562],\n","       [0.42151919],\n","       [0.43574504],\n","       [0.46191412],\n","       [0.47481293],\n","       [0.48665006],\n","       [0.48335904],\n","       [0.48314667],\n","       [0.47566225],\n","       [0.48176658],\n","       [0.50597168],\n","       [0.50289295],\n","       [0.51133295],\n","       [0.50772337],\n","       [0.50666176],\n","       [0.49068429],\n","       [0.51313769],\n","       [0.51281922],\n","       [0.50315837],\n","       [0.52242693],\n","       [0.5286905 ],\n","       [0.53760821],\n","       [0.5366527 ],\n","       [0.51430549],\n","       [0.52078142],\n","       [0.53134457],\n","       [0.52348855],\n","       [0.53171617],\n","       [0.54185474],\n","       [0.53808592],\n","       [0.5319816 ],\n","       [0.54424338],\n","       [0.52794736],\n","       [0.55252406],\n","       [0.56112322],\n","       [0.56022085],\n","       [0.55146245],\n","       [0.55528432],\n","       [0.56558204],\n","       [0.56080475],\n","       [0.58341738],\n","       [0.55894687],\n","       [0.53553804],\n","       [0.47884709],\n","       [0.49827489],\n","       [0.50910346],\n","       [0.53240618],\n","       [0.51945439],\n","       [0.51674719],\n","       [0.56181331],\n","       [0.52879668],\n","       [0.52343549],\n","       [0.5487022 ],\n","       [0.56913856],\n","       [0.56919161],\n","       [0.58129416],\n","       [0.58033873],\n","       [0.52821278],\n","       [0.54864915],\n","       [0.53628118],\n","       [0.5435533 ],\n","       [0.5620256 ],\n","       [0.56059246],\n","       [0.54445567],\n","       [0.5629811 ],\n","       [0.58469137],\n","       [0.58458518],\n","       [0.5894156 ],\n","       [0.60284519],\n","       [0.63941825],\n","       [0.63676418],\n","       [0.61372688],\n","       [0.61983121],\n","       [0.62407774],\n","       [0.63506562],\n","       [0.6254579 ],\n","       [0.60831256],\n","       [0.61356765],\n","       [0.60804714],\n","       [0.62582943],\n","       [0.61977816],\n","       [0.61409849],\n","       [0.64143537],\n","       [0.64472639],\n","       [0.61484163],\n","       [0.62471477],\n","       [0.65757207],\n","       [0.6578375 ],\n","       [0.64371783],\n","       [0.65767826],\n","       [0.67392115],\n","       [0.706407  ],\n","       [0.70460217],\n","       [0.70168276],\n","       [0.69663997],\n","       [0.70147039],\n","       [0.70746861],\n","       [0.72923193],\n","       [0.72631252],\n","       [0.74340465],\n","       [0.74552795],\n","       [0.76145236],\n","       [0.77456347],\n","       [0.74398855],\n","       [0.74382931],\n","       [0.77302407],\n","       [0.81049958],\n","       [0.81941722],\n","       [0.81745323],\n","       [0.81803705],\n","       [0.82966188],\n","       [0.83343078],\n","       [0.84436553],\n","       [0.84309147],\n","       [0.85641494],\n","       [0.84670112],\n","       [0.86326249],\n","       [0.87037537],\n","       [0.86607579],\n","       [0.84962053],\n","       [0.84335697],\n","       [0.84213604],\n","       [0.86650037],\n","       [0.85545952],\n","       [0.87430334],\n","       [0.87117156],\n","       [0.85476943],\n","       [0.82976815],\n","       [0.84192367],\n","       [0.8623069 ],\n","       [0.88953767],\n","       [0.86941994],\n","       [0.87770063],\n","       [0.88985614],\n","       [0.89351877],\n","       [0.91310581],\n","       [0.9381071 ],\n","       [0.94102667],\n","       [0.93747015],\n","       [0.93895642],\n","       [0.93587777],\n","       [0.96008286],\n","       [0.961516  ],\n","       [0.99145398],\n","       [0.99087   ],\n","       [1.        ]])"]},"metadata":{},"execution_count":37}],"source":["input_data = scaler.fit_transform(final_df)\n","input_data"]},{"cell_type":"code","execution_count":38,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":823,"status":"ok","timestamp":1729864438944,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"m5DAYIkHvDKQ","outputId":"053b2e22-7347-4623-8899-a7174dcb67f2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(855, 1)"]},"metadata":{},"execution_count":38}],"source":["input_data.shape"]},{"cell_type":"code","execution_count":39,"metadata":{"id":"mtrvijSovWVR","executionInfo":{"status":"ok","timestamp":1729864441606,"user_tz":-330,"elapsed":620,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"}}},"outputs":[],"source":["x_test = []\n","y_test = []\n","\n","for i in range(100, input_data.shape[0]):\n","    x_test.append(input_data[i-100: i])\n","    y_test.append(input_data[i, 0])"]},{"cell_type":"code","execution_count":40,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":532,"status":"ok","timestamp":1729864445018,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"QK5GUDvKvdrn","outputId":"a9e6c272-1d47-4fcf-e860-7e5af8536ad5"},"outputs":[{"output_type":"stream","name":"stdout","text":["(755, 100, 1)\n","(755,)\n"]}],"source":["x_train ,y_test = np.array(x_test),np.array(y_test)\n","print(x_train.shape)\n","print(y_test.shape)"]},{"cell_type":"code","execution_count":41,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6315,"status":"ok","timestamp":1729864454309,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"-NgBooXQwG1j","outputId":"a93bcdd6-8e81-4441-e63c-1ae2eb964780"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m4/4\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 366ms/step\n"]}],"source":["#Making predictions\n","y_predicted = model.predict(x_test)\n"]},{"cell_type":"code","execution_count":42,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":523,"status":"ok","timestamp":1729864458289,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"KGKmpjaSw1TA","outputId":"ee24ffe9-68c7-474a-d6c2-afdb63dbdd11"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(100, 1)"]},"metadata":{},"execution_count":42}],"source":["y_predicted.shape"]},{"cell_type":"code","execution_count":43,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":489,"status":"ok","timestamp":1729864460822,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"8cKDy0ykxAl2","outputId":"d1297ecd-3f3d-4d84-b012-0fd7c0df9213"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.0721907 , 0.06736028, 0.06911197, 0.06842189, 0.07155371,\n","       0.07845431, 0.08418707, 0.08482406, 0.08822126, 0.08556719,\n","       0.08445249, 0.0895483 , 0.0894952 , 0.0883805 , 0.0895483 ,\n","       0.08997296, 0.08938906, 0.09952758, 0.0998461 , 0.09989915,\n","       0.09820055, 0.09671427, 0.1359945 , 0.1348267 , 0.1377462 ,\n","       0.144169  , 0.15075112, 0.15345824, 0.15547536, 0.1538829 ,\n","       0.16009341, 0.16927655, 0.17187748, 0.17102824, 0.17299223,\n","       0.17819418, 0.18037053, 0.1772918 , 0.17798189, 0.17941503,\n","       0.17973358, 0.1945963 , 0.19019062, 0.19454325, 0.19220766,\n","       0.19316316, 0.19040291, 0.18870427, 0.19114605, 0.19146452,\n","       0.19034986, 0.19815283, 0.19937368, 0.195658  , 0.20346096,\n","       0.19486173, 0.20324859, 0.20059453, 0.19910825, 0.20038224,\n","       0.21588199, 0.21758055, 0.21657199, 0.21513885, 0.21535114,\n","       0.22103089, 0.21704978, 0.21513885, 0.21344021, 0.21253783,\n","       0.20436334, 0.20526571, 0.20128461, 0.20542495, 0.2020808 ,\n","       0.19932054, 0.20866292, 0.20776054, 0.21503267, 0.21975691,\n","       0.21524496, 0.21582885, 0.21508572, 0.2306386 , 0.23557513,\n","       0.23318649, 0.23037318, 0.243272  , 0.26476989, 0.26997192,\n","       0.26609692, 0.26975955, 0.2811721 , 0.27904879, 0.27782794,\n","       0.25011946, 0.26227506, 0.26503531, 0.26997192, 0.26896336,\n","       0.26652158, 0.26933489, 0.2679548 , 0.26827328, 0.26344285,\n","       0.26567226, 0.27772176, 0.26965337, 0.27241362, 0.2772971 ,\n","       0.27528006, 0.2433781 , 0.22448114, 0.23069166, 0.22310106,\n","       0.21848292, 0.20776054, 0.22936462, 0.22230479, 0.22686979,\n","       0.22559589, 0.22904615, 0.22660445, 0.21551038, 0.2266575 ,\n","       0.21524496, 0.21704978, 0.21428953, 0.21742131, 0.21020224,\n","       0.21789902, 0.22257021, 0.22506504, 0.22617979, 0.2369553 ,\n","       0.24369658, 0.24645683, 0.24921708, 0.25420675, 0.25059717,\n","       0.25022564, 0.25988641, 0.26333675, 0.26715862, 0.25176497,\n","       0.24613836, 0.24205107, 0.24905785, 0.28669252, 0.27835879,\n","       0.28271142, 0.2955571 , 0.30229846, 0.30750041, 0.27703176,\n","       0.28849727, 0.30107761, 0.31036685, 0.30691651, 0.29051439,\n","       0.28860346, 0.28706413, 0.300706  , 0.30176761, 0.29799888,\n","       0.30113066, 0.30967677, 0.3173205 , 0.31965609, 0.32310635,\n","       0.32337177, 0.31291474, 0.31201236, 0.30856202, 0.29460168,\n","       0.30983601, 0.3064388 , 0.30001592, 0.2927438 , 0.30123685,\n","       0.29481397, 0.29513244, 0.28101286, 0.26678701, 0.2588248 ,\n","       0.25171192, 0.26545997, 0.27124582, 0.26620311, 0.27066193,\n","       0.26901642, 0.27257286, 0.26726472, 0.27740328, 0.27692557,\n","       0.27979193, 0.2801104 , 0.28356074, 0.28064125, 0.28589634,\n","       0.30123685, 0.30436863, 0.30059982, 0.28053506, 0.28196828,\n","       0.28154362, 0.28648023, 0.28281761, 0.28812574, 0.31806364,\n","       0.33754449, 0.34985933, 0.33844687, 0.3449228 , 0.36822552,\n","       0.37751476, 0.38048731, 0.38807798, 0.38616705, 0.37974417,\n","       0.37602849, 0.36206806, 0.3500717 , 0.36079416, 0.35575136,\n","       0.35484899, 0.37162273, 0.38128357, 0.38133663, 0.37666544,\n","       0.3712512 , 0.35219492, 0.36477526, 0.36052874, 0.35389357,\n","       0.35304424, 0.34970009, 0.35134568, 0.35161102, 0.36912789,\n","       0.36397899, 0.36700467, 0.36673925, 0.37602849, 0.38903341,\n","       0.37905409, 0.37804561, 0.38154892, 0.38154892, 0.35798085,\n","       0.35814009, 0.36068797, 0.35086789, 0.36695154, 0.3667923 ,\n","       0.37103883, 0.38149586, 0.37804561, 0.37793942, 0.37772705,\n","       0.38298214, 0.39258985, 0.38781256, 0.40325926, 0.4041085 ,\n","       0.39986206, 0.39211214, 0.39232443, 0.37735552, 0.36084721,\n","       0.36297043, 0.34412661, 0.33887153, 0.34131322, 0.3431711 ,\n","       0.30452787, 0.28324227, 0.31795745, 0.29943202, 0.2761293 ,\n","       0.28281761, 0.31625889, 0.3249111 , 0.34099475, 0.37082654,\n","       0.36785391, 0.36477526, 0.36063492, 0.36822552, 0.38414993,\n","       0.40256918, 0.39949045, 0.39805723, 0.38149586, 0.38791875,\n","       0.39115671, 0.39036044, 0.3816551 , 0.39179366, 0.40793037,\n","       0.41716656, 0.40787731, 0.39975587, 0.40087053, 0.39752646,\n","       0.38308832, 0.38276985, 0.36169653, 0.34885085, 0.32809601,\n","       0.36965874, 0.34614365, 0.33627051, 0.3431711 , 0.33733212,\n","       0.34640907, 0.36350128, 0.36981798, 0.34635602, 0.3552206 ,\n","       0.37220662, 0.36790705, 0.37693086, 0.38006264, 0.38584858,\n","       0.39869426, 0.39657096, 0.36981798, 0.33223635, 0.32968847,\n","       0.31747974, 0.32124847, 0.32427415, 0.31418872, 0.32979457,\n","       0.35017788, 0.38982968, 0.39152824, 0.42836673, 0.43542656,\n","       0.4401508 , 0.44710445, 0.46133022, 0.45363344, 0.45129784,\n","       0.44222097, 0.45145708, 0.44514046, 0.44153089, 0.44853767,\n","       0.44604284, 0.45241259, 0.45129784, 0.45358038, 0.44997081,\n","       0.44784758, 0.44450343, 0.46239191, 0.47083183, 0.47868785,\n","       0.48224429, 0.47948412, 0.47014175, 0.46764692, 0.47322048,\n","       0.46483361, 0.46536445, 0.45496047, 0.4544297 , 0.43823987,\n","       0.44253945, 0.43701902, 0.43415258, 0.4195552 , 0.43155156,\n","       0.43011842, 0.43723131, 0.43516114, 0.44614894, 0.42884444,\n","       0.43670046, 0.45034242, 0.46419666, 0.46297581, 0.4498647 ,\n","       0.4665853 , 0.46817776, 0.46594835, 0.46881471, 0.46324115,\n","       0.47109725, 0.46876166, 0.46966403, 0.47704234, 0.48670319,\n","       0.48346522, 0.46631988, 0.46064022, 0.46265725, 0.52216151,\n","       0.55342644, 0.55661135, 0.56234415, 0.55194017, 0.5526833 ,\n","       0.56133559, 0.55416957, 0.56128246, 0.56595365, 0.56855466,\n","       0.58490374, 0.60751637, 0.59626315, 0.59403366, 0.59408679,\n","       0.59642239, 0.59997883, 0.60942731, 0.6187696 , 0.63618028,\n","       0.64706198, 0.66086317, 0.66473809, 0.65682894, 0.63681732,\n","       0.62726265, 0.61149748, 0.64079842, 0.6260418 , 0.65438724,\n","       0.64074529, 0.60910883, 0.61101976, 0.61170977, 0.62052129,\n","       0.60794103, 0.62455545, 0.63198689, 0.62259146, 0.64663732,\n","       0.6508308 , 0.65889911, 0.66962157, 0.68443132, 0.66277411,\n","       0.64313393, 0.64037376, 0.65682894, 0.60104044, 0.59090188,\n","       0.63156223, 0.60634858, 0.63177452, 0.62667875, 0.59923569,\n","       0.61669943, 0.62381231, 0.63485325, 0.59429908, 0.61930045,\n","       0.60072196, 0.57917094, 0.58479755, 0.61431078, 0.63214613,\n","       0.55390415, 0.52263922, 0.53421101, 0.56701526, 0.55926542,\n","       0.53792669, 0.48325285, 0.47295505, 0.4441319 , 0.46860242,\n","       0.47985565, 0.43914224, 0.39200595, 0.39094434, 0.36711078,\n","       0.37947875, 0.37746171, 0.41302621, 0.40564791, 0.40049901,\n","       0.43362181, 0.39046663, 0.38000959, 0.34693992, 0.35283195,\n","       0.34768305, 0.35017788, 0.35999789, 0.33096237, 0.32278788,\n","       0.33409423, 0.30659804, 0.28504701, 0.25266734, 0.23196564,\n","       0.28685176, 0.28143744, 0.2818621 , 0.28987744, 0.29083286,\n","       0.20733588, 0.23955624, 0.23780454, 0.25277353, 0.26636235,\n","       0.26896336, 0.26094802, 0.24879242, 0.26508845, 0.27501464,\n","       0.27989811, 0.28499396, 0.26630929, 0.26960031, 0.26312438,\n","       0.28998354, 0.28223371, 0.27363447, 0.32974152, 0.33605822,\n","       0.33648288, 0.36159035, 0.37714315, 0.37746171, 0.35994484,\n","       0.35713153, 0.3519295 , 0.35967942, 0.3559106 , 0.3592017 ,\n","       0.35718458, 0.35989171, 0.36573069, 0.36058179, 0.37072035,\n","       0.37740858, 0.37793942, 0.38080578, 0.37167578, 0.38133663,\n","       0.38600781, 0.38430917, 0.37894798, 0.36822552, 0.37040188,\n","       0.40219757, 0.41286698, 0.4171135 , 0.42783588, 0.44052233,\n","       0.45060784, 0.44269868, 0.45135097, 0.48813633, 0.46669149,\n","       0.4544297 , 0.44407877, 0.45299648, 0.45432352, 0.46085251,\n","       0.46770005, 0.48245666, 0.4895165 , 0.49132124, 0.49827489,\n","       0.51473015, 0.51154524, 0.51749032, 0.50862574, 0.50820108,\n","       0.51011202, 0.5102182 , 0.5308138 , 0.53468872, 0.53824516,\n","       0.55390415, 0.55220559, 0.54222626, 0.53702431, 0.53866982,\n","       0.51775575, 0.57004093, 0.56276873, 0.57656992, 0.55921229,\n","       0.52938058, 0.52959287, 0.51802117, 0.49923032, 0.43839911,\n","       0.45400504, 0.46600141, 0.46154259, 0.45580979, 0.42443868,\n","       0.44307029, 0.42279317, 0.40623181, 0.40256918, 0.39864113,\n","       0.39412926, 0.39901273, 0.38186747, 0.37247205, 0.40612562,\n","       0.42151919, 0.43574504, 0.46191412, 0.47481293, 0.48665006,\n","       0.48335904, 0.48314667, 0.47566225, 0.48176658, 0.50597168,\n","       0.50289295, 0.51133295, 0.50772337, 0.50666176, 0.49068429,\n","       0.51313769, 0.51281922, 0.50315837, 0.52242693, 0.5286905 ,\n","       0.53760821, 0.5366527 , 0.51430549, 0.52078142, 0.53134457,\n","       0.52348855, 0.53171617, 0.54185474, 0.53808592, 0.5319816 ,\n","       0.54424338, 0.52794736, 0.55252406, 0.56112322, 0.56022085,\n","       0.55146245, 0.55528432, 0.56558204, 0.56080475, 0.58341738,\n","       0.55894687, 0.53553804, 0.47884709, 0.49827489, 0.50910346,\n","       0.53240618, 0.51945439, 0.51674719, 0.56181331, 0.52879668,\n","       0.52343549, 0.5487022 , 0.56913856, 0.56919161, 0.58129416,\n","       0.58033873, 0.52821278, 0.54864915, 0.53628118, 0.5435533 ,\n","       0.5620256 , 0.56059246, 0.54445567, 0.5629811 , 0.58469137,\n","       0.58458518, 0.5894156 , 0.60284519, 0.63941825, 0.63676418,\n","       0.61372688, 0.61983121, 0.62407774, 0.63506562, 0.6254579 ,\n","       0.60831256, 0.61356765, 0.60804714, 0.62582943, 0.61977816,\n","       0.61409849, 0.64143537, 0.64472639, 0.61484163, 0.62471477,\n","       0.65757207, 0.6578375 , 0.64371783, 0.65767826, 0.67392115,\n","       0.706407  , 0.70460217, 0.70168276, 0.69663997, 0.70147039,\n","       0.70746861, 0.72923193, 0.72631252, 0.74340465, 0.74552795,\n","       0.76145236, 0.77456347, 0.74398855, 0.74382931, 0.77302407,\n","       0.81049958, 0.81941722, 0.81745323, 0.81803705, 0.82966188,\n","       0.83343078, 0.84436553, 0.84309147, 0.85641494, 0.84670112,\n","       0.86326249, 0.87037537, 0.86607579, 0.84962053, 0.84335697,\n","       0.84213604, 0.86650037, 0.85545952, 0.87430334, 0.87117156,\n","       0.85476943, 0.82976815, 0.84192367, 0.8623069 , 0.88953767,\n","       0.86941994, 0.87770063, 0.88985614, 0.89351877, 0.91310581,\n","       0.9381071 , 0.94102667, 0.93747015, 0.93895642, 0.93587777,\n","       0.96008286, 0.961516  , 0.99145398, 0.99087   , 1.        ])"]},"metadata":{},"execution_count":43}],"source":["y_test"]},{"cell_type":"code","execution_count":44,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":855,"status":"ok","timestamp":1729864466486,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"lZNnWYgixHFO","outputId":"34d890d5-59fd-454f-fbb4-2262e09e36e9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan],\n","       [nan]], dtype=float32)"]},"metadata":{},"execution_count":44}],"source":["y_predicted"]},{"cell_type":"markdown","metadata":{"id":"5fQoh-hS871t"},"source":[]},{"cell_type":"code","execution_count":45,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":780,"status":"ok","timestamp":1729864471622,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"},"user_tz":-330},"id":"hZnp3xVL7_3V","outputId":"c99d51e7-9b0b-4334-f82f-dba10446421c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.02123255])"]},"metadata":{},"execution_count":45}],"source":["scaler.scale_"]},{"cell_type":"code","source":["scale_factor = 1 / 0.0212355  # Define scale_factor\n","\n","y_predicted = y_predicted * scale_factor\n","y_test = y_test * scale_factor"],"metadata":{"id":"VD7i6-cpSeAC","executionInfo":{"status":"ok","timestamp":1729864475201,"user_tz":-330,"elapsed":867,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["\n","plt.plot(y_test, 'b', label = 'Original Price')\n","plt.plot(y_predicted, 'r', label = 'Predicted Price')\n","plt.title('original price vs predicted price')\n","plt.xlabel('Time')\n","plt.ylabel('Price')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"HYVzNqpjSnSs","executionInfo":{"status":"ok","timestamp":1729868816724,"user_tz":-330,"elapsed":2758,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"}},"outputId":"ab437d3d-38d8-4490-b1c9-28cecf548fdf"},"execution_count":53,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["!pip install streamlit"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ulRb4On0N3Jm","executionInfo":{"status":"ok","timestamp":1729868866679,"user_tz":-330,"elapsed":7173,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"}},"outputId":"43f95aba-64f4-4110-f6e6-cc206e8df948"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting streamlit\n","  Downloading streamlit-1.39.0-py2.py3-none-any.whl.metadata (8.5 kB)\n","Requirement already satisfied: altair<6,>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.2.2)\n","Requirement already satisfied: blinker<2,>=1.0.0 in /usr/lib/python3/dist-packages (from streamlit) (1.4)\n","Requirement already satisfied: cachetools<6,>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (5.5.0)\n","Requirement already satisfied: click<9,>=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.1.7)\n","Requirement already satisfied: numpy<3,>=1.20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (1.26.4)\n","Requirement already satisfied: packaging<25,>=20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (24.1)\n","Requirement already satisfied: pandas<3,>=1.4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.2.2)\n","Requirement already satisfied: pillow<11,>=7.1.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (10.4.0)\n","Requirement already satisfied: protobuf<6,>=3.20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (3.20.3)\n","Requirement already satisfied: pyarrow>=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (16.1.0)\n","Requirement already satisfied: requests<3,>=2.27 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.32.3)\n","Requirement already satisfied: rich<14,>=10.14.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (13.9.3)\n","Requirement already satisfied: tenacity<10,>=8.1.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (9.0.0)\n","Requirement already satisfied: toml<2,>=0.10.1 in /usr/local/lib/python3.10/dist-packages (from streamlit) (0.10.2)\n","Requirement already satisfied: typing-extensions<5,>=4.3.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.12.2)\n","Requirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in /usr/local/lib/python3.10/dist-packages (from streamlit) (3.1.43)\n","Collecting pydeck<1,>=0.8.0b4 (from streamlit)\n","  Downloading pydeck-0.9.1-py2.py3-none-any.whl.metadata (4.1 kB)\n","Requirement already satisfied: tornado<7,>=6.0.3 in /usr/local/lib/python3.10/dist-packages (from streamlit) (6.3.3)\n","Collecting watchdog<6,>=2.1.5 (from streamlit)\n","  Downloading watchdog-5.0.3-py3-none-manylinux2014_x86_64.whl.metadata (41 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m41.9/41.9 kB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: entrypoints in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (0.4)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (3.1.4)\n","Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (4.23.0)\n","Requirement already satisfied: toolz in /usr/local/lib/python3.10/dist-packages (from altair<6,>=4.0->streamlit) (0.12.1)\n","Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.10/dist-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.11)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.4.0->streamlit) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.4.0->streamlit) (2024.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=1.4.0->streamlit) (2024.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (2.2.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27->streamlit) (2024.8.30)\n","Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich<14,>=10.14.0->streamlit) (3.0.0)\n","Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich<14,>=10.14.0->streamlit) (2.18.0)\n","Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.10/dist-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (5.0.1)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->altair<6,>=4.0->streamlit) (3.0.2)\n","Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (24.2.0)\n","Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (2024.10.1)\n","Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.35.1)\n","Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.20.0)\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich<14,>=10.14.0->streamlit) (0.1.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas<3,>=1.4.0->streamlit) (1.16.0)\n","Downloading streamlit-1.39.0-py2.py3-none-any.whl (8.7 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m8.7/8.7 MB\u001b[0m \u001b[31m50.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pydeck-0.9.1-py2.py3-none-any.whl (6.9 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m6.9/6.9 MB\u001b[0m \u001b[31m65.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading watchdog-5.0.3-py3-none-manylinux2014_x86_64.whl (79 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m79.3/79.3 kB\u001b[0m \u001b[31m5.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: watchdog, pydeck, streamlit\n","Successfully installed pydeck-0.9.1 streamlit-1.39.0 watchdog-5.0.3\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TQGEV3YVREJP","executionInfo":{"status":"ok","timestamp":1729869775445,"user_tz":-330,"elapsed":48943,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"}},"outputId":"4bc62a7b-c346-44e2-bc22-522e7109b351"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# Create a new file named 'app.py' and write some content into it\n","with open('app.py', 'w') as f:\n","    f.write(\"# This is the content of the new file.\\n\")\n","    f.write(\"print('Hello, this is app.py')\")\n"],"metadata":{"id":"lTgsfojQXFsv","executionInfo":{"status":"ok","timestamp":1729871246665,"user_tz":-330,"elapsed":615,"user":{"displayName":"Surya Dorepalli","userId":"14506283044899856507"}}},"execution_count":2,"outputs":[]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM6SQdvzqNyGHsNjGjyNcod"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}